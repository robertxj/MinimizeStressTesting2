Reading M-sequence.
lookahead is 5
0:(1,write,ac1.amount:Write,(TestAccountBasic.java:161),-1)
1:(1,write,ac2.amount:Write,(TestAccountBasic.java:161),-1)
2:(4,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
3:(4,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
4:(4,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
5:(4,exit,ac1:ac1:deposit,(TestAccountBasic.java:171),-1)
6:(5,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
7:(5,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
8:(5,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
9:(5,exit,ac1:ac1:withdraw,(TestAccountBasic.java:171),-1)
10:(4,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
11:(4,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
12:(4,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
13:(4,exit,ac1:ac1:withdraw,(TestAccountBasic.java:183),-1)
14:(5,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
15:(5,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
16:(5,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
17:(5,exit,ac1:ac1:withdraw,(TestAccountBasic.java:183),-1)
18:(4,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
19:(4,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
20:(4,exit,ac1:ac1:transfer,(TestAccountBasic.java:199),-1)
21:(4,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
22:(4,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
23:(4,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
24:(4,exit,ac2:ac2:deposit,(TestAccountBasic.java:171),-1)
25:(4,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
26:(4,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
27:(4,write,ac2.amount:Write,(TestAccountBasic.java:181),-1)
28:(4,exit,ac2:ac2:withdraw,(TestAccountBasic.java:183),-1)
29:(5,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
30:(5,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
31:(5,exit,ac1:ac1:transfer,(TestAccountBasic.java:199),-1)
32:(4,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
33:(4,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
34:(4,exit,ac2:ac2:deposit,(TestAccountBasic.java:199),-1)
35:(4,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
36:(4,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
37:(4,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
38:(4,exit,ac1:ac1:deposit,(TestAccountBasic.java:171),-1)
39:(4,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
40:(4,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
41:(4,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
42:(4,exit,ac1:ac1:withdraw,(TestAccountBasic.java:183),-1)
43:(4,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
44:(4,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
45:(4,exit,ac1:ac1:transfer,(TestAccountBasic.java:199),-1)
46:(5,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
47:(5,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
48:(5,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
49:(5,exit,ac2:ac2:deposit,(TestAccountBasic.java:171),-1)
50:(4,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
51:(4,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
52:(4,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
53:(4,exit,ac2:ac2:transfer,(TestAccountBasic.java:171),-1)
54:(5,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
55:(5,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
56:(5,write,ac2.amount:Write,(TestAccountBasic.java:181),-1)
57:(5,exit,ac2:ac2:withdraw,(TestAccountBasic.java:183),-1)
58:(4,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
59:(4,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
60:(4,exit,ac2:ac2:withdraw,(TestAccountBasic.java:183),-1)
61:(5,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
62:(5,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
63:(5,write,ac2.amount:Write,(TestAccountBasic.java:193),-1)
64:(5,read,ac1.amount:Read,(TestAccountBasic.java:196),-1)
65:(5,write,ac1.amount:Write,(TestAccountBasic.java:197),-1)
66:(5,exit,ac2:ac2:withdraw,(TestAccountBasic.java:199),-1)
67:(4,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
68:(4,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
69:(4,write,ac2.amount:Write,(TestAccountBasic.java:193),-1)
70:(4,read,ac1.amount:Read,(TestAccountBasic.java:196),-1)
71:(4,write,ac1.amount:Write,(TestAccountBasic.java:197),-1)
72:(4,exit,ac2:ac2:transfer,(TestAccountBasic.java:199),-1)
73:(5,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
74:(5,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
75:(5,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
76:(5,exit,ac1:ac1:deposit,(TestAccountBasic.java:171),-1)
77:(4,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
78:(4,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
79:(4,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
80:(4,exit,ac1:ac1:deposit,(TestAccountBasic.java:171),-1)
81:(5,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
82:(5,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
83:(5,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
84:(5,exit,ac1:ac1:withdraw,(TestAccountBasic.java:183),-1)
85:(4,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
86:(4,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
87:(4,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
88:(4,exit,ac1:ac1:withdraw,(TestAccountBasic.java:183),-1)
89:(5,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
90:(5,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
91:(5,write,ac1.amount:Write,(TestAccountBasic.java:193),-1)
92:(5,read,ac2.amount:Read,(TestAccountBasic.java:196),-1)
93:(5,write,ac2.amount:Write,(TestAccountBasic.java:197),-1)
94:(5,exit,ac1:ac1:transfer,(TestAccountBasic.java:199),-1)
95:(5,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
96:(5,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
97:(5,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
98:(5,exit,ac2:ac2:deposit,(TestAccountBasic.java:171),-1)
99:(5,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
100:(4,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
101:(5,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
102:(4,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
103:(5,write,ac2.amount:Write,(TestAccountBasic.java:181),-1)
104:(4,write,ac1.amount:Write,(TestAccountBasic.java:193),-1)
105:(5,exit,ac2:ac2:withdraw,(TestAccountBasic.java:183),-1)
106:(4,read,ac2.amount:Read,(TestAccountBasic.java:196),-1)
107:(4,write,ac2.amount:Write,(TestAccountBasic.java:197),-1)
108:(4,exit,ac1:ac1:transfer,(TestAccountBasic.java:199),-1)
109:(5,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
110:(5,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
111:(5,write,ac2.amount:Write,(TestAccountBasic.java:193),-1)
112:(5,read,ac1.amount:Read,(TestAccountBasic.java:196),-1)
113:(5,write,ac1.amount:Write,(TestAccountBasic.java:197),-1)
114:(5,exit,ac2:ac2:deposit,(TestAccountBasic.java:199),-1)
115:(4,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
116:(4,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
117:(4,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
118:(4,exit,ac2:ac2:deposit,(TestAccountBasic.java:171),-1)
119:(5,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
120:(5,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
121:(5,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
122:(5,exit,ac1:ac1:deposit,(TestAccountBasic.java:171),-1)
123:(5,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
124:(4,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
125:(5,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
126:(4,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
127:(5,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
128:(4,write,ac2.amount:Write,(TestAccountBasic.java:181),-1)
129:(5,exit,ac1:ac1:withdraw,(TestAccountBasic.java:183),-1)
130:(4,exit,ac2:ac2:withdraw,(TestAccountBasic.java:183),-1)
131:(5,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
132:(5,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
133:(5,exit,ac1:ac1:transfer,(TestAccountBasic.java:199),-1)
134:(4,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
135:(4,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
136:(4,write,ac2.amount:Write,(TestAccountBasic.java:193),-1)
137:(4,read,ac1.amount:Read,(TestAccountBasic.java:196),-1)
138:(4,write,ac1.amount:Write,(TestAccountBasic.java:197),-1)
139:(4,exit,ac2:ac2:transfer,(TestAccountBasic.java:199),-1)
140:(4,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
141:(4,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
142:(4,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
143:(4,exit,ac1:ac1:deposit,(TestAccountBasic.java:171),-1)
144:(4,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
145:(5,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
146:(4,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
147:(5,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
148:(4,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
149:(5,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
150:(4,exit,ac1:ac1:deposit,(TestAccountBasic.java:183),-1)
151:(5,exit,ac2:ac2:deposit,(TestAccountBasic.java:171),-1)
152:(4,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
153:(4,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
154:(4,write,ac1.amount:Write,(TestAccountBasic.java:193),-1)
155:(4,read,ac2.amount:Read,(TestAccountBasic.java:196),-1)
156:(4,write,ac2.amount:Write,(TestAccountBasic.java:197),-1)
157:(4,exit,ac1:ac1:deposit,(TestAccountBasic.java:199),-1)
158:(5,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
159:(5,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
160:(5,write,ac2.amount:Write,(TestAccountBasic.java:181),-1)
161:(5,exit,ac2:ac2:withdraw,(TestAccountBasic.java:183),-1)
162:(4,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
163:(4,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
164:(4,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
165:(4,exit,ac2:ac2:deposit,(TestAccountBasic.java:171),-1)
166:(5,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
167:(5,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
168:(5,write,ac2.amount:Write,(TestAccountBasic.java:193),-1)
169:(5,read,ac1.amount:Read,(TestAccountBasic.java:196),-1)
170:(5,write,ac1.amount:Write,(TestAccountBasic.java:197),-1)
171:(5,exit,ac2:ac2:withdraw,(TestAccountBasic.java:199),-1)
172:(4,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
173:(4,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
174:(4,write,ac2.amount:Write,(TestAccountBasic.java:181),-1)
175:(4,exit,ac2:ac2:deposit,(TestAccountBasic.java:183),-1)
176:(5,entry,ac1:deposit,(TestAccountBasic.java:167),-1)
177:(5,read,ac1.amount:Read,(TestAccountBasic.java:169),-1)
178:(5,write,ac1.amount:Write,(TestAccountBasic.java:170),-1)
179:(4,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
180:(5,exit,ac1:ac1:transfer,(TestAccountBasic.java:171),-1)
181:(4,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
182:(4,write,ac2.amount:Write,(TestAccountBasic.java:193),-1)
183:(4,read,ac1.amount:Read,(TestAccountBasic.java:196),-1)
184:(4,write,ac1.amount:Write,(TestAccountBasic.java:197),-1)
185:(4,exit,ac2:ac2:withdraw,(TestAccountBasic.java:199),-1)
186:(5,entry,ac1:withdraw,(TestAccountBasic.java:177),-1)
187:(4,entry,Joiner4:T4Completed,(TestAccountBasic.java:230),-1)
188:(5,read,ac1.amount:Read,(TestAccountBasic.java:178),-1)
189:(4,exit,Joiner4:Joiner4:T4Completed,(TestAccountBasic.java:233),-1)
190:(5,write,ac1.amount:Write,(TestAccountBasic.java:181),-1)
191:(5,exit,ac1:ac1:withdraw,(TestAccountBasic.java:183),-1)
192:(5,entry,ac1:transfer,(TestAccountBasic.java:189),-1)
193:(5,read,ac1.amount:Read,(TestAccountBasic.java:190),-1)
194:(5,write,ac1.amount:Write,(TestAccountBasic.java:193),-1)
195:(5,read,ac2.amount:Read,(TestAccountBasic.java:196),-1)
196:(5,write,ac2.amount:Write,(TestAccountBasic.java:197),-1)
197:(5,exit,ac1:ac1:transfer,(TestAccountBasic.java:199),-1)
198:(5,entry,ac2:deposit,(TestAccountBasic.java:167),-1)
199:(5,read,ac2.amount:Read,(TestAccountBasic.java:169),-1)
200:(5,write,ac2.amount:Write,(TestAccountBasic.java:170),-1)
201:(5,exit,ac2:ac2:transfer,(TestAccountBasic.java:171),-1)
202:(5,entry,ac2:withdraw,(TestAccountBasic.java:177),-1)
203:(5,read,ac2.amount:Read,(TestAccountBasic.java:178),-1)
204:(5,exit,ac2:ac2:withdraw,(TestAccountBasic.java:183),-1)
205:(5,entry,ac2:transfer,(TestAccountBasic.java:189),-1)
206:(5,read,ac2.amount:Read,(TestAccountBasic.java:190),-1)
207:(1,entry,Joiner4:joinT4,(TestAccountBasic.java:223),-1)
208:(5,exit,ac2:ac2:transfer,(TestAccountBasic.java:199),-1)
209:(1,exit,Joiner4:Joiner4:joinT4,(TestAccountBasic.java:227),-1)
210:(1,entry,Joiner5:joinT5,(TestAccountBasic.java:223),-1)
211:(5,entry,Joiner5:T5Completed,(TestAccountBasic.java:230),-1)
212:(5,exit,Joiner5:Joiner5:T5Completed,(TestAccountBasic.java:233),-1)
213:(1,exit,Joiner5:Joiner5:joinT5,(TestAccountBasic.java:227),-1)
Read replay file

*** Mismatch at index: 9 (where the first event has index 0).
Expected: 5, exit, ac1:ac1:withdraw, (TestAccountBasic.java:171)
Actual:   5, exit, ac1:ac1:deposit, (TestAccountBasic.java:171)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 9 (where the first event has index 0).
Expected: 5, exit, ac1:ac1:withdraw, (TestAccountBasic.java:171)
Actual:   5, entry, ac1:withdraw, (TestAccountBasic.java:177)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 53 (where the first event has index 0).
Expected: 4, exit, ac2:ac2:transfer, (TestAccountBasic.java:171)
Actual:   4, exit, ac2:ac2:deposit, (TestAccountBasic.java:171)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 53 (where the first event has index 0).
Expected: 4, exit, ac2:ac2:transfer, (TestAccountBasic.java:171)
Actual:   4, entry, ac2:withdraw, (TestAccountBasic.java:177)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 60 (where the first event has index 0).
Expected: 4, exit, ac2:ac2:withdraw, (TestAccountBasic.java:183)
Actual:   4, write, ac2.amount:Write, (TestAccountBasic.java:181)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 63 (where the first event has index 0).
Expected: 5, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   5, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 63 (where the first event has index 0).
Expected: 5, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   5, entry, ac1:deposit, (TestAccountBasic.java:167)
*** chooseAlternateSequence: returns step = 4


*** Mismatch at index: 69 (where the first event has index 0).
Expected: 4, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   4, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = 3


*** Mismatch at index: 91 (where the first event has index 0).
Expected: 5, write, ac1.amount:Write, (TestAccountBasic.java:193)
Actual:   5, exit, ac1:ac1:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = 3


*** Mismatch at index: 104 (where the first event has index 0).
Expected: 4, write, ac1.amount:Write, (TestAccountBasic.java:193)
Actual:   4, exit, ac1:ac1:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 106 (where the first event has index 0).
Expected: 4, read, ac2.amount:Read, (TestAccountBasic.java:196)
Actual:   4, exit, ac1:ac1:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = 2


*** Mismatch at index: 111 (where the first event has index 0).
Expected: 5, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   5, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 111 (where the first event has index 0).
Expected: 5, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   5, entry, ac1:deposit, (TestAccountBasic.java:167)
*** chooseAlternateSequence: returns step = 4


*** Mismatch at index: 136 (where the first event has index 0).
Expected: 4, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   4, exit, ac2:ac2:deposit, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 136 (where the first event has index 0).
Expected: 4, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   4, entry, ac1:deposit, (TestAccountBasic.java:167)
*** chooseAlternateSequence: returns step = 4


*** Mismatch at index: 150 (where the first event has index 0).
Expected: 4, exit, ac1:ac1:deposit, (TestAccountBasic.java:183)
Actual:   4, exit, ac1:ac1:withdraw, (TestAccountBasic.java:183)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 150 (where the first event has index 0).
Expected: 4, exit, ac1:ac1:deposit, (TestAccountBasic.java:183)
Actual:   4, entry, ac1:transfer, (TestAccountBasic.java:189)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 154 (where the first event has index 0).
Expected: 4, write, ac1.amount:Write, (TestAccountBasic.java:193)
Actual:   4, exit, ac1:ac1:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 154 (where the first event has index 0).
Expected: 4, write, ac1.amount:Write, (TestAccountBasic.java:193)
Actual:   4, entry, ac2:deposit, (TestAccountBasic.java:167)
*** chooseAlternateSequence: returns step = 4


*** Mismatch at index: 171 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:withdraw, (TestAccountBasic.java:199)
Actual:   5, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 171 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:withdraw, (TestAccountBasic.java:199)
Actual:   5, entry, ac1:deposit, (TestAccountBasic.java:167)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 174 (where the first event has index 0).
Expected: 4, write, ac2.amount:Write, (TestAccountBasic.java:181)
Actual:   4, exit, ac2:ac2:withdraw, (TestAccountBasic.java:183)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 174 (where the first event has index 0).
Expected: 4, write, ac2.amount:Write, (TestAccountBasic.java:181)
Actual:   4, entry, ac2:transfer, (TestAccountBasic.java:189)
*** chooseAlternateSequence: returns step = 2


*** Mismatch at index: 180 (where the first event has index 0).
Expected: 5, exit, ac1:ac1:transfer, (TestAccountBasic.java:171)
Actual:   5, exit, ac1:ac1:deposit, (TestAccountBasic.java:171)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 180 (where the first event has index 0).
Expected: 5, exit, ac1:ac1:transfer, (TestAccountBasic.java:171)
Actual:   5, entry, ac1:withdraw, (TestAccountBasic.java:177)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 182 (where the first event has index 0).
Expected: 4, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   4, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 182 (where the first event has index 0).
Expected: 4, write, ac2.amount:Write, (TestAccountBasic.java:193)
Actual:   4, entry, Joiner4:T4Completed, (TestAccountBasic.java:230)
*** chooseAlternateSequence: returns step = 4


*** Mismatch at index: 201 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:transfer, (TestAccountBasic.java:171)
Actual:   5, exit, ac2:ac2:deposit, (TestAccountBasic.java:171)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 201 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:transfer, (TestAccountBasic.java:171)
Actual:   5, entry, ac2:withdraw, (TestAccountBasic.java:177)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 204 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:withdraw, (TestAccountBasic.java:183)
Actual:   5, write, ac2.amount:Write, (TestAccountBasic.java:181)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 208 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
Actual:   5, write, ac2.amount:Write, (TestAccountBasic.java:193)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 208 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
Actual:   5, read, ac1.amount:Read, (TestAccountBasic.java:196)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 208 (where the first event has index 0).
Expected: 5, exit, ac2:ac2:transfer, (TestAccountBasic.java:199)
Actual:   5, write, ac1.amount:Write, (TestAccountBasic.java:197)
*** chooseAlternateSequence: returns step = -1


*** Mismatch at index: 213 (where the first event has index 0).
Expected: 1, exit, Joiner5:Joiner5:joinT5, (TestAccountBasic.java:227)
Actual:   1, reentry, Joiner5:Joiner5:joinT5, (TestAccountBasic.java:225)
*** chooseAlternateSequence: returns step = -1

*** Replay Completed ***
Phase 2 starts with thread 1 running.
passing
time:530
