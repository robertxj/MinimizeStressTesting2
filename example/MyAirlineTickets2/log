Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
Read replay file
*** Replay Completed ***
Phase 2 starts with thread 1 running.
SOLD 0 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,StopSales:Read,(TestBug.java:142),-1)
12:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
16:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
17:(5,read,StopSales:Read,(TestBug.java:142),-1)
18:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,read,StopSales:Read,(TestBug.java:142),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,write,StopSales:Write,(TestBug.java:148),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(5,write,StopSales:Write,(TestBug.java:148),-1)
29:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 23 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 28 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 8 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(3,read,StopSales:Read,(TestBug.java:142),-1)
3:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(5,read,StopSales:Read,(TestBug.java:142),-1)
6:(4,read,StopSales:Read,(TestBug.java:142),-1)
7:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
8:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
9:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(5,read,StopSales:Read,(TestBug.java:142),-1)
12:(3,read,StopSales:Read,(TestBug.java:142),-1)
13:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(3,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(5,read,StopSales:Read,(TestBug.java:142),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,read,StopSales:Read,(TestBug.java:142),-1)
29:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(4,write,StopSales:Write,(TestBug.java:148),-1)
33:(4,read,StopSales:Read,(TestBug.java:142),-1)
34:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
35:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
36:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
37:(3,write,StopSales:Write,(TestBug.java:148),-1)
38:(3,read,StopSales:Read,(TestBug.java:142),-1)
39:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
40:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
41:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
42:(5,write,StopSales:Write,(TestBug.java:148),-1)
43:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 32 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 37 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 42 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 12 Seats !!!
failing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,StopSales:Read,(TestBug.java:142),-1)
12:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
16:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
17:(5,read,StopSales:Read,(TestBug.java:142),-1)
18:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,read,StopSales:Read,(TestBug.java:142),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,write,StopSales:Write,(TestBug.java:148),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(5,write,StopSales:Write,(TestBug.java:148),-1)
29:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 23 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 28 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 8 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(3,read,StopSales:Read,(TestBug.java:142),-1)
3:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
6:(3,read,StopSales:Read,(TestBug.java:142),-1)
7:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
8:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
10:(3,read,StopSales:Read,(TestBug.java:142),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
12:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
13:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
14:(3,write,StopSales:Write,(TestBug.java:148),-1)
15:(3,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 14 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 4 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(3,read,StopSales:Read,(TestBug.java:142),-1)
3:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(5,read,StopSales:Read,(TestBug.java:142),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
7:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
8:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
10:(5,read,StopSales:Read,(TestBug.java:142),-1)
11:(3,read,StopSales:Read,(TestBug.java:142),-1)
12:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(3,read,StopSales:Read,(TestBug.java:142),-1)
16:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(5,read,StopSales:Read,(TestBug.java:142),-1)
20:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(3,write,StopSales:Write,(TestBug.java:148),-1)
24:(3,read,StopSales:Read,(TestBug.java:142),-1)
25:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(5,write,StopSales:Write,(TestBug.java:148),-1)
29:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 23 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 28 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 8 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(3,read,StopSales:Read,(TestBug.java:142),-1)
3:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(4,read,StopSales:Read,(TestBug.java:142),-1)
6:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(3,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
12:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
13:(3,read,StopSales:Read,(TestBug.java:142),-1)
14:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,StopSales:Read,(TestBug.java:142),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,read,StopSales:Read,(TestBug.java:142),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,write,StopSales:Write,(TestBug.java:148),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(3,write,StopSales:Write,(TestBug.java:148),-1)
29:(3,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 23 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 28 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 8 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,StopSales:Read,(TestBug.java:142),-1)
12:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
16:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
17:(5,read,StopSales:Read,(TestBug.java:142),-1)
18:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,read,StopSales:Read,(TestBug.java:142),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,write,StopSales:Write,(TestBug.java:148),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(5,write,StopSales:Write,(TestBug.java:148),-1)
29:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 23 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 28 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 8 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,StopSales:Read,(TestBug.java:142),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,StopSales:Read,(TestBug.java:142),-1)
13:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,write,StopSales:Write,(TestBug.java:148),-1)
29:(4,read,StopSales:Read,(TestBug.java:142),-1)
30:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(3,write,StopSales:Write,(TestBug.java:148),-1)
34:(3,read,StopSales:Read,(TestBug.java:142),-1)
35:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
36:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
37:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
38:(5,write,StopSales:Write,(TestBug.java:148),-1)
39:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 28 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 33 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 38 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 11 Seats !!!
failing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,StopSales:Read,(TestBug.java:142),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,StopSales:Read,(TestBug.java:142),-1)
13:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,StopSales:Read,(TestBug.java:142),-1)
16:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
20:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
21:(5,read,StopSales:Read,(TestBug.java:142),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,read,StopSales:Read,(TestBug.java:142),-1)
24:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
27:(4,write,StopSales:Write,(TestBug.java:148),-1)
28:(4,read,StopSales:Read,(TestBug.java:142),-1)
29:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(5,write,StopSales:Write,(TestBug.java:148),-1)
33:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 27 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 32 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 9 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,StopSales:Read,(TestBug.java:142),-1)
16:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
20:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
21:(5,read,StopSales:Read,(TestBug.java:142),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,read,StopSales:Read,(TestBug.java:142),-1)
24:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
27:(4,write,StopSales:Write,(TestBug.java:148),-1)
28:(4,read,StopSales:Read,(TestBug.java:142),-1)
29:(3,read,StopSales:Read,(TestBug.java:142),-1)
30:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(5,write,StopSales:Write,(TestBug.java:148),-1)
34:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 27 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 33 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,write,StopSales:Write,(TestBug.java:148),-1)
29:(4,read,StopSales:Read,(TestBug.java:142),-1)
30:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(3,write,StopSales:Write,(TestBug.java:148),-1)
34:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
35:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
36:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
37:(5,write,StopSales:Write,(TestBug.java:148),-1)
38:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 28 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
6:(5,read,StopSales:Read,(TestBug.java:142),-1)
7:(3,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(3,read,StopSales:Read,(TestBug.java:142),-1)
12:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(5,read,StopSales:Read,(TestBug.java:142),-1)
16:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(3,write,StopSales:Write,(TestBug.java:148),-1)
20:(3,read,StopSales:Read,(TestBug.java:142),-1)
21:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(5,write,StopSales:Write,(TestBug.java:148),-1)
25:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 19 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 24 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 7 Seats !!!
passing
Skip extra event at index 33:(3,write,StopSales:Write,(TestBug.java:148),-1)

*** Mismatch at index: 37 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
6:(5,read,StopSales:Read,(TestBug.java:142),-1)
7:(3,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(3,read,StopSales:Read,(TestBug.java:142),-1)
12:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(5,read,StopSales:Read,(TestBug.java:142),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,write,StopSales:Write,(TestBug.java:148),-1)
21:(4,read,StopSales:Read,(TestBug.java:142),-1)
22:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
23:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
24:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
25:(3,write,StopSales:Write,(TestBug.java:148),-1)
26:(3,read,StopSales:Read,(TestBug.java:142),-1)
27:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
28:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
29:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
30:(5,write,StopSales:Write,(TestBug.java:148),-1)
31:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 20 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 25 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 30 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 9 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
6:(5,read,StopSales:Read,(TestBug.java:142),-1)
7:(3,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(3,read,StopSales:Read,(TestBug.java:142),-1)
12:(4,read,StopSales:Read,(TestBug.java:142),-1)
13:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(5,read,StopSales:Read,(TestBug.java:142),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
27:(3,write,StopSales:Write,(TestBug.java:148),-1)
28:(3,read,StopSales:Read,(TestBug.java:142),-1)
29:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(5,write,StopSales:Write,(TestBug.java:148),-1)
33:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 27 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 32 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 9 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(3,write,StopSales:Write,(TestBug.java:148),-1)
29:(3,read,StopSales:Read,(TestBug.java:142),-1)
30:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(5,write,StopSales:Write,(TestBug.java:148),-1)
34:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 28 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 33 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,write,StopSales:Write,(TestBug.java:148),-1)
29:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(3,write,StopSales:Write,(TestBug.java:148),-1)
33:(3,read,StopSales:Read,(TestBug.java:142),-1)
34:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
35:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
36:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
37:(5,write,StopSales:Write,(TestBug.java:148),-1)
38:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(4,read,StopSales:Read,(TestBug.java:142),-1)
3:(3,read,StopSales:Read,(TestBug.java:142),-1)
4:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
8:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
9:(3,read,StopSales:Read,(TestBug.java:142),-1)
10:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,StopSales:Read,(TestBug.java:142),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,StopSales:Read,(TestBug.java:142),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,write,StopSales:Write,(TestBug.java:148),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(3,write,StopSales:Write,(TestBug.java:148),-1)
25:(3,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 19 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 24 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 7 Seats !!!
passing
Skip extra event at index 28:(4,write,StopSales:Write,(TestBug.java:148),-1)

*** Mismatch at index: 32 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 37 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(4,read,StopSales:Read,(TestBug.java:142),-1)
3:(3,read,StopSales:Read,(TestBug.java:142),-1)
4:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
8:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
9:(3,read,StopSales:Read,(TestBug.java:142),-1)
10:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,StopSales:Read,(TestBug.java:142),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(5,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,write,StopSales:Write,(TestBug.java:148),-1)
21:(4,read,StopSales:Read,(TestBug.java:142),-1)
22:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
23:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
24:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
25:(3,write,StopSales:Write,(TestBug.java:148),-1)
26:(3,read,StopSales:Read,(TestBug.java:142),-1)
27:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
28:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
29:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
30:(5,write,StopSales:Write,(TestBug.java:148),-1)
31:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 20 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 25 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 30 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 9 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(4,read,StopSales:Read,(TestBug.java:142),-1)
3:(5,read,StopSales:Read,(TestBug.java:142),-1)
4:(3,read,StopSales:Read,(TestBug.java:142),-1)
5:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
6:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
7:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,StopSales:Read,(TestBug.java:142),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,StopSales:Read,(TestBug.java:142),-1)
13:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(3,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
12:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
13:(3,read,StopSales:Read,(TestBug.java:142),-1)
14:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,StopSales:Read,(TestBug.java:142),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,read,StopSales:Read,(TestBug.java:142),-1)
24:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
27:(4,write,StopSales:Write,(TestBug.java:148),-1)
28:(4,read,StopSales:Read,(TestBug.java:142),-1)
29:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(3,write,StopSales:Write,(TestBug.java:148),-1)
33:(3,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 27 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 32 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 9 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,read,StopSales:Read,(TestBug.java:142),-1)
24:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
27:(4,write,StopSales:Write,(TestBug.java:148),-1)
28:(4,read,StopSales:Read,(TestBug.java:142),-1)
29:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(3,write,StopSales:Write,(TestBug.java:148),-1)
33:(3,read,StopSales:Read,(TestBug.java:142),-1)
34:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 27 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 32 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,write,StopSales:Write,(TestBug.java:148),-1)
29:(4,read,StopSales:Read,(TestBug.java:142),-1)
30:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(3,write,StopSales:Write,(TestBug.java:148),-1)
34:(3,read,StopSales:Read,(TestBug.java:142),-1)
35:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
36:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
37:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
38:(5,write,StopSales:Write,(TestBug.java:148),-1)
Read replay file

*** Mismatch at index: 28 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 33 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,StopSales:Read,(TestBug.java:142),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,StopSales:Read,(TestBug.java:142),-1)
13:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 10 Seats !!!
passing
Skip extra event at index 38:(5,write,StopSales:Write,(TestBug.java:148),-1)
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,StopSales:Read,(TestBug.java:142),-1)
16:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
20:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
21:(5,read,StopSales:Read,(TestBug.java:142),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,read,StopSales:Read,(TestBug.java:142),-1)
24:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
27:(4,write,StopSales:Write,(TestBug.java:148),-1)
28:(4,read,StopSales:Read,(TestBug.java:142),-1)
29:(3,read,StopSales:Read,(TestBug.java:142),-1)
30:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(5,write,StopSales:Write,(TestBug.java:148),-1)
34:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 27 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 33 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,write,StopSales:Write,(TestBug.java:148),-1)
29:(4,read,StopSales:Read,(TestBug.java:142),-1)
30:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(3,write,StopSales:Write,(TestBug.java:148),-1)
34:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
35:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
36:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
37:(5,write,StopSales:Write,(TestBug.java:148),-1)
38:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 28 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
4:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
5:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
6:(5,read,StopSales:Read,(TestBug.java:142),-1)
7:(3,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(3,read,StopSales:Read,(TestBug.java:142),-1)
12:(4,read,StopSales:Read,(TestBug.java:142),-1)
13:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 10 Seats !!!
passing
Skip extra event at index 33:(3,write,StopSales:Write,(TestBug.java:148),-1)

*** Mismatch at index: 37 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
19:(5,read,StopSales:Read,(TestBug.java:142),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(3,write,StopSales:Write,(TestBug.java:148),-1)
29:(3,read,StopSales:Read,(TestBug.java:142),-1)
30:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(5,write,StopSales:Write,(TestBug.java:148),-1)
34:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 28 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 33 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 4 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,write,StopSales:Write,(TestBug.java:148),-1)
29:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(3,write,StopSales:Write,(TestBug.java:148),-1)
33:(3,read,StopSales:Read,(TestBug.java:142),-1)
34:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
35:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
36:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
37:(5,write,StopSales:Write,(TestBug.java:148),-1)
38:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(4,read,StopSales:Read,(TestBug.java:142),-1)
3:(5,read,StopSales:Read,(TestBug.java:142),-1)
4:(3,read,StopSales:Read,(TestBug.java:142),-1)
5:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
6:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
7:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
8:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,StopSales:Read,(TestBug.java:142),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,StopSales:Read,(TestBug.java:142),-1)
13:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
14:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
15:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 10 Seats !!!
passing
Skip extra event at index 28:(4,write,StopSales:Write,(TestBug.java:148),-1)

*** Mismatch at index: 32 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 37 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 5 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(3,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
9:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
10:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
11:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
12:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
13:(3,read,StopSales:Read,(TestBug.java:142),-1)
14:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
15:(4,read,StopSales:Read,(TestBug.java:142),-1)
16:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
17:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
18:(5,read,StopSales:Read,(TestBug.java:142),-1)
19:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,StopSales:Read,(TestBug.java:142),-1)
21:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
22:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,write,StopSales:Write,(TestBug.java:148),-1)
25:(4,read,StopSales:Read,(TestBug.java:142),-1)
26:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
27:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
28:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
29:(3,write,StopSales:Write,(TestBug.java:148),-1)
30:(3,read,StopSales:Read,(TestBug.java:142),-1)
31:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
32:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
33:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
34:(5,write,StopSales:Write,(TestBug.java:148),-1)
35:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 24 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 29 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 34 (where the first event has index 0).
Expected: 5, write, StopSales:Write, (TestBug.java:148)
Actual:   5, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
23:(4,read,StopSales:Read,(TestBug.java:142),-1)
24:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
25:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
26:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
27:(4,write,StopSales:Write,(TestBug.java:148),-1)
28:(4,read,StopSales:Read,(TestBug.java:142),-1)
29:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
30:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
31:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
32:(3,write,StopSales:Write,(TestBug.java:148),-1)
33:(3,read,StopSales:Read,(TestBug.java:142),-1)
34:(5,read,StopSales:Read,(TestBug.java:142),-1)
Read replay file

*** Mismatch at index: 27 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 32 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

*** Replay Completed ***
Phase 2 starts with thread 3 running.
SOLD 10 Seats !!!
passing
Reading M-sequence.
lookahead is 5
0:(1,write,Num_Of_Seats_Sold:Write,(TestBug.java:136),-1)
1:(1,write,StopSales:Write,(TestBug.java:137),-1)
2:(5,read,StopSales:Read,(TestBug.java:142),-1)
3:(4,read,StopSales:Read,(TestBug.java:142),-1)
4:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
5:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
6:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
7:(5,read,StopSales:Read,(TestBug.java:142),-1)
8:(3,read,StopSales:Read,(TestBug.java:142),-1)
9:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
10:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
11:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
12:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
13:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
14:(3,read,StopSales:Read,(TestBug.java:142),-1)
15:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
16:(4,read,StopSales:Read,(TestBug.java:142),-1)
17:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
18:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
19:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
20:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
21:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
22:(5,read,StopSales:Read,(TestBug.java:142),-1)
23:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
24:(4,read,StopSales:Read,(TestBug.java:142),-1)
25:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
26:(4,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
27:(4,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
28:(4,write,StopSales:Write,(TestBug.java:148),-1)
29:(4,read,StopSales:Read,(TestBug.java:142),-1)
30:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
31:(3,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
32:(3,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
33:(3,write,StopSales:Write,(TestBug.java:148),-1)
34:(3,read,StopSales:Read,(TestBug.java:142),-1)
35:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:145),-1)
36:(5,write,Num_Of_Seats_Sold:Write,(TestBug.java:146),-1)
37:(5,read,Num_Of_Seats_Sold:Read,(TestBug.java:147),-1)
38:(5,write,StopSales:Write,(TestBug.java:148),-1)
Read replay file

*** Mismatch at index: 28 (where the first event has index 0).
Expected: 4, write, StopSales:Write, (TestBug.java:148)
Actual:   4, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1


*** Mismatch at index: 33 (where the first event has index 0).
Expected: 3, write, StopSales:Write, (TestBug.java:148)
Actual:   3, read, StopSales:Read, (TestBug.java:142)
*** chooseAlternateSequence: returns step = 1

Skip extra event at index 38:(5,write,StopSales:Write,(TestBug.java:148),-1)
SOLD 10 Seats !!!
passing
